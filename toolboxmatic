#!/bin/bash

DEBUG=0

#######################################
# Display an error message.
# Arguments:
#   String.
# Returns:
#   0
#######################################
err() {
  if [[ "$*" != *"DEBUG:"* ]]; then
    echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*" >&2
  elif [[ "$*" != *"DEBUG:"* && ${DEBUG} == "1" ]]; then
    echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*" >&2
  fi
}

#######################################
# Resets Tools Configuration
# Arguments:
#   None
# Returns:
#   0
#######################################
reset_toolbox() {
    err "INFO: Resetting toolbox..."
    res=`${SDB} unregister-host --all -y`
}


#######################################
# Issues a query
# Arguments:
#   String.
# Returns:
#   Returns
#######################################
query() {
    export MYSQL_PWD=${DB_PASS}
    q=$*
    cmd="${CLI} -h ${MASTER} -u ${DB_USER} -P ${MA_PORT} -B --skip-column-names -e \"${q}\""
    err "DEBUG: Sending query ${cmd}"
    res=$(eval $cmd)
}

echo Welcome to toolboxmatic, your automatic SingleStore Toolbox configurator!
echo =========================================================================
echo

# A few initial  checks. Is the CLI is installed...
CLI=`which singlestore`

if [ -z "${CLI}" ]; then
    CLI=`which memsql`
elif [ -z "${CLI}" ]; then
    CLI=`which mysql`
elif [ -z "${CLI}" ]; then
    err "ERROR: CLI not found. Please install package singlestore-client. \
         \For more information visit: https://docs.singlestore.com/db/latest/en/user-and-cluster-administration/cluster-management-with-tools/singlestore-tools-installation/singlestore-client-installation.html"
    exit 1
fi

# Let's check if toolbox is installed...
SDB=`which sdb-toolbox-config`

if [ -z "${SDB}" ]; then
    err "ERROR: SingleStore Tools are not found. Please install package singlestoredb-toolbox. For more information visit: https://docs.singlestore.com/db/latest/en/user-and-cluster-administration/migrate-from-ops-to-tools/sudo/install-singlestore-tools.html"
    exit 1
fi

read -p "Aggregator [localhost]: " MASTER
read -p "Aggregator Port [3306]: " MA_PORT
read -p "Username [root]: " DB_USER
prompt="Password []: "
while IFS= read -p "${prompt}" -r -s -n 1 char
do
    if [[ $char == $'\0' ]]
    then
        break
    fi
    prompt='*'
    DB_PASS+="$char"
done
echo
read -p "SSH key []: " SSH_KEY

if [ -z "${SSH_KEY}" ]; then
    err "ERROR: Sorry. You have more than 1 one host in your cluster but you have not provided a SSH key. Exiting."
    exit 1
fi

if [ -z "${MASTER}" ]; then
    MASTER="localhost"
fi

if [ -z "${MA_PORT}" ]; then
    MA_PORT="3306"
fi

if [ -z "${DB_USER}" ]; then
    DB_USER="root"
fi

err "DEBUG: MA   = ${MASTER}"
err "DEBUG: PORT = ${MA_PORT}"
err "DEBUG: USER = ${DB_USER}"
err "DEBUG: PASS = ${DB_PASS}"
err "DEBUG: SSH  = ${SSH_KEY}"
err "DEBUG: CLI  = ${CLI}"
err "DEBUG: SDB  = ${SDB}"

query "SELECT 1"
err "DEBUG: ${res}"

if [ ${res} != 1 ]; then
    err "ERROR: Unable to query ${MASTER}. Check your parameters"
    exit 1
fi

query "SELECT IP_ADDR FROM information_schema.MV_HOSTS_INFORMATION"
err "DEBUG: ${res}"
HOSTS=${res}

TOOLBOX_HOSTS=`${SDB} list-hosts -q`

# If Tools is already configured, or half baked, let's ask the user if he wants to start over
if [ ! -z "${TOOLBOX_HOSTS}" ]; then
    err "INFO: Toolbox seems to be already configured. Should we remove all hosts?"
    while true; do
        read -p "Reset SingleStore Tool configuration? (Y/N): " yn
        case $yn in
            [Yy]* ) reset_toolbox; break;;
            [Nn]* ) exit;;
            * ) err "INFO: Please answer yes or no.";;
        esac
    done
fi

# Let's register all hosts
for host in ${HOSTS}
do
    err "INFO: Registering host ${host}"
    res=`${SDB} register-host --allow-duplicate-host-fingerprints --host ${host} --identity-file ${SSH_KEY} -y`
    err "DEBUG: ${res}"
done

res=`sdb-admin list-nodes`
err "INFO: ${res}"
